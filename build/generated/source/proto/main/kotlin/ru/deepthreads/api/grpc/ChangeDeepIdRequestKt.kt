//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: account_service.proto

package ru.deepthreads.api.grpc;

@kotlin.jvm.JvmName("-initializechangeDeepIdRequest")
inline fun changeDeepIdRequest(block: ru.deepthreads.api.grpc.ChangeDeepIdRequestKt.Dsl.() -> kotlin.Unit): ru.deepthreads.api.grpc.AccountServiceOuterClass.ChangeDeepIdRequest =
  ru.deepthreads.api.grpc.ChangeDeepIdRequestKt.Dsl._create(ru.deepthreads.api.grpc.AccountServiceOuterClass.ChangeDeepIdRequest.newBuilder()).apply { block() }._build()
object ChangeDeepIdRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: ru.deepthreads.api.grpc.AccountServiceOuterClass.ChangeDeepIdRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ru.deepthreads.api.grpc.AccountServiceOuterClass.ChangeDeepIdRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ru.deepthreads.api.grpc.AccountServiceOuterClass.ChangeDeepIdRequest = _builder.build()

    /**
     * <code>string deep_id = 1;</code>
     */
    var deepId: kotlin.String
      @JvmName("getDeepId")
      get() = _builder.getDeepId()
      @JvmName("setDeepId")
      set(value) {
        _builder.setDeepId(value)
      }
    /**
     * <code>string deep_id = 1;</code>
     */
    fun clearDeepId() {
      _builder.clearDeepId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun ru.deepthreads.api.grpc.AccountServiceOuterClass.ChangeDeepIdRequest.copy(block: ru.deepthreads.api.grpc.ChangeDeepIdRequestKt.Dsl.() -> kotlin.Unit): ru.deepthreads.api.grpc.AccountServiceOuterClass.ChangeDeepIdRequest =
  ru.deepthreads.api.grpc.ChangeDeepIdRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

