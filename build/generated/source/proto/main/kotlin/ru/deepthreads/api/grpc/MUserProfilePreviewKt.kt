//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: users.proto

package ru.deepthreads.api.grpc;

@kotlin.jvm.JvmName("-initializemUserProfilePreview")
inline fun mUserProfilePreview(block: ru.deepthreads.api.grpc.MUserProfilePreviewKt.Dsl.() -> kotlin.Unit): ru.deepthreads.api.grpc.Users.MUserProfilePreview =
  ru.deepthreads.api.grpc.MUserProfilePreviewKt.Dsl._create(ru.deepthreads.api.grpc.Users.MUserProfilePreview.newBuilder()).apply { block() }._build()
object MUserProfilePreviewKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: ru.deepthreads.api.grpc.Users.MUserProfilePreview.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ru.deepthreads.api.grpc.Users.MUserProfilePreview.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ru.deepthreads.api.grpc.Users.MUserProfilePreview = _builder.build()

    /**
     * <code>string nickname = 1;</code>
     */
    var nickname: kotlin.String
      @JvmName("getNickname")
      get() = _builder.getNickname()
      @JvmName("setNickname")
      set(value) {
        _builder.setNickname(value)
      }
    /**
     * <code>string nickname = 1;</code>
     */
    fun clearNickname() {
      _builder.clearNickname()
    }

    /**
     * <code>optional string avatar = 2;</code>
     */
    var avatar: kotlin.String
      @JvmName("getAvatar")
      get() = _builder.getAvatar()
      @JvmName("setAvatar")
      set(value) {
        _builder.setAvatar(value)
      }
    /**
     * <code>optional string avatar = 2;</code>
     */
    fun clearAvatar() {
      _builder.clearAvatar()
    }
    /**
     * <code>optional string avatar = 2;</code>
     * @return Whether the avatar field is set.
     */
    fun hasAvatar(): kotlin.Boolean {
      return _builder.hasAvatar()
    }

    /**
     * <code>int32 role = 3;</code>
     */
    var role: kotlin.Int
      @JvmName("getRole")
      get() = _builder.getRole()
      @JvmName("setRole")
      set(value) {
        _builder.setRole(value)
      }
    /**
     * <code>int32 role = 3;</code>
     */
    fun clearRole() {
      _builder.clearRole()
    }

    /**
     * <code>string id = 4;</code>
     */
    var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>string id = 4;</code>
     */
    fun clearId() {
      _builder.clearId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun ru.deepthreads.api.grpc.Users.MUserProfilePreview.copy(block: ru.deepthreads.api.grpc.MUserProfilePreviewKt.Dsl.() -> kotlin.Unit): ru.deepthreads.api.grpc.Users.MUserProfilePreview =
  ru.deepthreads.api.grpc.MUserProfilePreviewKt.Dsl._create(this.toBuilder()).apply { block() }._build()

