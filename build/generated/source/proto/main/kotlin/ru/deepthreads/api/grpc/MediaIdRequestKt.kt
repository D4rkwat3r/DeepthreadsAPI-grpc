//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: media_service.proto

package ru.deepthreads.api.grpc;

@kotlin.jvm.JvmName("-initializemediaIdRequest")
inline fun mediaIdRequest(block: ru.deepthreads.api.grpc.MediaIdRequestKt.Dsl.() -> kotlin.Unit): ru.deepthreads.api.grpc.MediaServiceOuterClass.MediaIdRequest =
  ru.deepthreads.api.grpc.MediaIdRequestKt.Dsl._create(ru.deepthreads.api.grpc.MediaServiceOuterClass.MediaIdRequest.newBuilder()).apply { block() }._build()
object MediaIdRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: ru.deepthreads.api.grpc.MediaServiceOuterClass.MediaIdRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ru.deepthreads.api.grpc.MediaServiceOuterClass.MediaIdRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ru.deepthreads.api.grpc.MediaServiceOuterClass.MediaIdRequest = _builder.build()

    /**
     * <code>string resource_id = 1;</code>
     */
    var resourceId: kotlin.String
      @JvmName("getResourceId")
      get() = _builder.getResourceId()
      @JvmName("setResourceId")
      set(value) {
        _builder.setResourceId(value)
      }
    /**
     * <code>string resource_id = 1;</code>
     */
    fun clearResourceId() {
      _builder.clearResourceId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun ru.deepthreads.api.grpc.MediaServiceOuterClass.MediaIdRequest.copy(block: ru.deepthreads.api.grpc.MediaIdRequestKt.Dsl.() -> kotlin.Unit): ru.deepthreads.api.grpc.MediaServiceOuterClass.MediaIdRequest =
  ru.deepthreads.api.grpc.MediaIdRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

